{"ast":null,"code":"var _jsxFileName = \"/var/www/code/FSWD_FINAL/frontend/src/views/Login/LoginPage.js\",\n  _s = $RefreshSig$();\nimport classes from \"./LoginPage.module.css\";\nimport LoginForm from \"./LoginForm\";\nimport Modal from \"../Modal/Modal\";\nimport { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { validateEmail, validatePassword, validatePasswordLength } from \"../../utils/validate\";\nimport { localStorageService } from \"../../services/LocalStorage.service\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHouseUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const navigate = useNavigate();\n  //el pending es para el spinner\n  const [pending, setPending] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [loginInfo, setLoginInfo] = useState({\n    loggedIn: false,\n    email: localStorage.getItem(\"email\") || \"\",\n    password: localStorage.getItem(\"password\") || \"\",\n    rememberMe: localStorage.getItem(\"rememberMe\") || false,\n    loginError: \"\"\n  });\n  //refactor\n  const handleVisibility = async loginData => {\n    const info = {\n      loggedIn: true,\n      email: loginData.email === \"\" ? \"Email required\" : loginData.email,\n      password: loginData.password === \"\" ? \"Password required\" : loginData.password,\n      rememberMe: loginData.rememberMe,\n      loginHeader: \"login successfull\",\n      loginMessage: \"you may be redirected to calendar\"\n    };\n    //console.log(validateEmail(loginData.email));\n    if (!loginData || !validateEmail(loginData.email) || !validatePasswordLength(loginData.password) || !validatePassword(loginData.password)\n    //setlogin info\n    ) setPending(true);\n    try {\n      const response = await fetch(\"http://localhost:8000/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: loginData.email,\n          password: loginData.password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        if (loginData.rememberMe) {\n          localStorageService.setItem(\"email\", loginData.email);\n          localStorageService.setItem(\"password\", loginData.password);\n          localStorageService.setItem(\"rememberMe\", true);\n        }\n\n        //guardar el token de acceso en el localstorage con la clave \"accessToken\"\n        localStorage.setItem(\"accessToken\", data.data.token);\n        //guardar el Refreshtoken en el localstorage con la clave \"refreshToken\"\n        localStorage.setItem(\"refreshToken\", data.data.refreshToken);\n        //guardamos el correo del user para pasarselo a Table\n        localStorage.setItem(\"email\", loginData.email);\n\n        //redirección cuando pasen 3s\n        setTimeout(() => {\n          navigate(\"/index/Page/1.html\");\n        }, 3000);\n      } else {\n        // Aquí puedes mostrar un mensaje de error o realizar cualquier otra acción apropiada\n        info.loggedIn = false;\n        info.loginHeader = \"login failed\";\n        info.loginMessage = \"WTF\";\n        console.log(response.status);\n      }\n    } catch (error) {\n      {\n        info.loggedIn = false;\n        info.loginHeader = \"login failed\";\n        info.loginMessage = \"wrong email or password\";\n        console.log(\"login failed\");\n      }\n    }\n    setLoginInfo(info);\n    setPending(false);\n    setVisible(!visible);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(Modal, {\n      visible: visible,\n      onLogin: handleVisibility,\n      data: loginInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), document.querySelector(\"#modal\")), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.formContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.formWrapper,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faHouseUser,\n              size: \"xl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), \"Welcome Back!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Login to have access.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes[\"login-links\"],\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              className: classes.active,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              onClick: () => navigate(\"/register\"),\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n            onLogin: handleVisibility\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(LoginPage, \"UmwrMybg+1uj1FVlYSysJy0Yi+U=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["classes","LoginForm","Modal","useState","ReactDOM","validateEmail","validatePassword","validatePasswordLength","localStorageService","useNavigate","FontAwesomeIcon","faHouseUser","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginPage","_s","navigate","pending","setPending","visible","setVisible","loginInfo","setLoginInfo","loggedIn","email","localStorage","getItem","password","rememberMe","loginError","handleVisibility","loginData","info","loginHeader","loginMessage","response","fetch","method","headers","body","JSON","stringify","data","json","ok","setItem","token","refreshToken","setTimeout","console","log","status","error","children","createPortal","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","document","querySelector","className","container","formContainer","formWrapper","icon","size","href","active","onClick","_c","$RefreshReg$"],"sources":["/var/www/code/FSWD_FINAL/frontend/src/views/Login/LoginPage.js"],"sourcesContent":["import classes from \"./LoginPage.module.css\";\nimport LoginForm from \"./LoginForm\";\nimport Modal from \"../Modal/Modal\";\n\nimport { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  validateEmail,\n  validatePassword,\n  validatePasswordLength,\n} from \"../../utils/validate\";\nimport { localStorageService } from \"../../services/LocalStorage.service\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHouseUser } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction LoginPage() {\n  const navigate = useNavigate();\n  //el pending es para el spinner\n  const [pending, setPending] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [loginInfo, setLoginInfo] = useState({\n    loggedIn: false,\n    email: localStorage.getItem(\"email\") || \"\",\n    password: localStorage.getItem(\"password\") || \"\",\n    rememberMe: localStorage.getItem(\"rememberMe\") || false,\n    loginError: \"\",\n  });\n  //refactor\n  const handleVisibility = async (loginData) => {\n    const info = {\n      loggedIn: true,\n      email: loginData.email === \"\" ? \"Email required\" : loginData.email,\n      password:\n        loginData.password === \"\" ? \"Password required\" : loginData.password,\n      rememberMe: loginData.rememberMe,\n      loginHeader: \"login successfull\",\n      loginMessage: \"you may be redirected to calendar\",\n    };\n    //console.log(validateEmail(loginData.email));\n    if (\n      !loginData ||\n      !validateEmail(loginData.email) ||\n      !validatePasswordLength(loginData.password) ||\n      !validatePassword(loginData.password)\n      //setlogin info\n    )\n      setPending(true);\n    try {\n      const response = await fetch(\"http://localhost:8000/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          email: loginData.email,\n          password: loginData.password,\n        }),\n      });\n\n      const data = await response.json();\n      if (response.ok) {\n        if (loginData.rememberMe) {\n          localStorageService.setItem(\"email\", loginData.email);\n          localStorageService.setItem(\"password\", loginData.password);\n          localStorageService.setItem(\"rememberMe\", true);\n        }\n\n        //guardar el token de acceso en el localstorage con la clave \"accessToken\"\n        localStorage.setItem(\"accessToken\", data.data.token);\n        //guardar el Refreshtoken en el localstorage con la clave \"refreshToken\"\n        localStorage.setItem(\"refreshToken\", data.data.refreshToken);\n        //guardamos el correo del user para pasarselo a Table\n        localStorage.setItem(\"email\", loginData.email);\n\n        //redirección cuando pasen 3s\n        setTimeout(() => {\n          navigate(\"/index/Page/1.html\");\n        }, 3000);\n      } else {\n        // Aquí puedes mostrar un mensaje de error o realizar cualquier otra acción apropiada\n        info.loggedIn = false;\n        info.loginHeader = \"login failed\";\n        info.loginMessage = \"WTF\";\n        console.log(response.status);\n      }\n    } catch (error) {\n      {\n        info.loggedIn = false;\n        info.loginHeader = \"login failed\";\n        info.loginMessage = \"wrong email or password\";\n        console.log(\"login failed\");\n      }\n    }\n    setLoginInfo(info);\n    setPending(false);\n    setVisible(!visible);\n  };\n\n  return (\n    <>\n      {/* creamos el portal y lo asignamos */}\n      {ReactDOM.createPortal(\n        <Modal visible={visible} onLogin={handleVisibility} data={loginInfo} />,\n        document.querySelector(\"#modal\")\n      )}\n      <div className={classes.container}>\n        <div className={classes.formContainer}>\n          <div className={classes.formWrapper}>\n            <h1>\n              {\" \"}\n              <FontAwesomeIcon icon={faHouseUser} size=\"xl\" />\n              Welcome Back!\n            </h1>\n            <p>Login to have access.</p>\n            <div className={classes[\"login-links\"]}>\n              <a href=\"#\" className={classes.active}>\n                Login\n              </a>\n              <a onClick={() => navigate(\"/register\")}>Register</a>\n            </div>\n            <LoginForm onLogin={handleVisibility} />\n          </div>\n          .\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default LoginPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}